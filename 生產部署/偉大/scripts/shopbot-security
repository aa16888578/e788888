#!/bin/bash

# 🔐 ShopBot 安全檢查工具
# 使用方法: shopbot-security [選項]

# 獲取腳本所在目錄
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# 顯示幫助信息
show_help() {
    echo "🔐 ShopBot 安全檢查工具"
    echo "================================"
    echo ""
    echo "使用方法:"
    echo "  $0 [選項]"
    echo ""
    echo "選項:"
    echo "  -h, --help     顯示此幫助信息"
    echo "  -c, --check    運行完整安全檢查"
    echo "  -e, --env      只檢查環境變數文件"
    echo "  -g, --git      只檢查 .gitignore 配置"
    echo "  -s, --status   顯示 Git 狀態"
    echo "  -v, --version  顯示版本信息"
    echo ""
    echo "示例:"
    echo "  $0              # 運行完整檢查"
    echo "  $0 -e           # 只檢查環境變數"
    echo "  $0 -s           # 顯示 Git 狀態"
    echo ""
    echo "📁 項目根目錄: $PROJECT_ROOT"
}

# 檢查環境變數文件
check_env_files() {
    echo "🔍 檢查環境變數文件..."
    echo "================================"
    
    cd "$PROJECT_ROOT" || exit 1
    
    if git ls-files | grep -E "\.env$|\.env\."; then
        echo "❌ 警告：發現環境變數文件被 Git 追蹤！"
        echo "   這些文件包含敏感信息，應該立即移除："
        echo ""
        git ls-files | grep -E "\.env$|\.env\." | while read file; do
            echo "   - $file"
        done
        echo ""
        echo "🚨 緊急操作："
        echo "   1. 立即從 Git 中移除這些文件："
        echo "      git rm --cached .env*"
        echo "   2. 提交更改："
        echo "      git commit -m 'Remove sensitive environment files'"
        echo "   3. 檢查 .gitignore 是否正確配置"
        echo ""
        return 1
    else
        echo "✅ 沒有環境變數文件被 Git 追蹤"
        return 0
    fi
}

# 檢查 .gitignore 配置
check_gitignore() {
    echo "🔍 檢查 .gitignore 配置..."
    echo "================================"
    
    cd "$PROJECT_ROOT" || exit 1
    
    if [ -f ".gitignore" ]; then
        if grep -q "\.env" .gitignore; then
            echo "✅ 根目錄 .gitignore 包含 .env 模式"
        else
            echo "❌ 根目錄 .gitignore 缺少 .env 模式"
        fi
    else
        echo "❌ 根目錄缺少 .gitignore 文件"
    fi
    
    echo ""
    echo "📋 檢查子目錄 .gitignore..."
    for dir in admin functions web; do
        if [ -d "$dir" ]; then
            if [ -f "$dir/.gitignore" ]; then
                if grep -q "\.env" "$dir/.gitignore"; then
                    echo "✅ $dir/.gitignore 配置正確"
                else
                    echo "⚠️  $dir/.gitignore 缺少 .env 保護"
                fi
            else
                echo "❌ $dir/ 目錄缺少 .gitignore 文件"
            fi
        fi
    done
}

# 顯示 Git 狀態
show_git_status() {
    echo "🔍 Git 狀態檢查..."
    echo "================================"
    
    cd "$PROJECT_ROOT" || exit 1
    
    echo "📋 當前分支:"
    git branch --show-current
    
    echo ""
    echo "📋 最近提交:"
    git log --oneline -5
    
    echo ""
    echo "📋 暫存區狀態:"
    git status --porcelain | head -10
    
    echo ""
    echo "📋 未追蹤文件 (前10個):"
    git status --porcelain | grep "^??" | head -10
}

# 運行完整檢查
run_full_check() {
    echo "🔍 開始完整 Git 安全檢查..."
    echo "================================"
    echo "📁 項目根目錄: $PROJECT_ROOT"
    echo ""
    
    cd "$PROJECT_ROOT" || exit 1
    
    # 檢查環境變數文件
    if ! check_env_files; then
        echo ""
        echo "❌ 環境變數檢查失敗！請立即處理上述問題。"
        return 1
    fi
    
    echo ""
    
    # 檢查 .gitignore 配置
    check_gitignore
    
    echo ""
    
    # 檢查最近提交中的敏感信息
    echo "📋 檢查最近提交中的敏感信息..."
    if git log --oneline -10 | grep -i "env\|config\|secret\|key\|password\|token"; then
        echo "⚠️  發現可能包含敏感信息的提交"
        echo "   建議檢查這些提交的內容："
        git log --oneline -10 | grep -i "env\|config\|secret\|key\|password\|token"
    else
        echo "✅ 最近提交中沒有發現明顯的敏感信息"
    fi
    
    echo ""
    echo "================================"
    echo "🔍 完整安全檢查完成！"
    
    # 提供安全建議
    echo ""
    echo "💡 安全建議："
    echo "1. 永遠不要提交 .env 文件"
    echo "2. 使用環境變數管理敏感信息"
    echo "3. 定期檢查 .gitignore 配置"
    echo "4. 如果發現敏感信息被提交，立即移除並更換密鑰"
    echo "5. 使用 git-secrets 等工具進行自動檢查"
}

# 主函數
main() {
    case "${1:-}" in
        -h|--help)
            show_help
            ;;
        -c|--check)
            run_full_check
            ;;
        -e|--env)
            check_env_files
            ;;
        -g|--git)
            check_gitignore
            ;;
        -s|--status)
            show_git_status
            ;;
        -v|--version)
            echo "🔐 ShopBot 安全檢查工具 v1.0.0"
            echo "📁 項目根目錄: $PROJECT_ROOT"
            ;;
        "")
            run_full_check
            ;;
        *)
            echo "❌ 未知選項: $1"
            echo "使用 '$0 --help' 查看幫助信息"
            exit 1
            ;;
    esac
}

# 運行主函數
main "$@"
