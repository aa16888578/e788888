{"fsPath":"/home/a0928997578_gmail_com/偉大/PROJECT_ORGANIZATION.md","fileUuid":"6bec6c2e-12f2-4f82-b13b-5e2fd4a37046","fileSizeBytes":5592,"numLines":340,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":341,"addedLines":["# 🏗️ ShopBot 多平台電商系統 - 項目整理總結","","> 統一管理、簡化配置、提升開發效率的項目整理方案","","## 📋 **整理概述**","","本次項目整理的主要目標是將原本分散的多個子項目整合為一個統一的項目，提供統一的管理界面和簡化的開發體驗。","","### 🎯 **整理目標**","","1. **統一管理**: 一個命令管理所有子項目","2. **簡化配置**: 統一的環境配置文件","3. **提升效率**: 自動化的構建和部署腳本","4. **改善體驗**: 清晰的項目結構和文檔","","### ✅ **整理成果**","","- 創建了根目錄的總管家 `package.json`","- 統一了環境配置文件 `.env.example`","- 開發了完整的腳本工具集","- 優化了項目結構和文檔","","---","","## 🏗️ **新的項目結構**","","```","偉大/","├── 📁 admin/                    # 管理後台 (Next.js 15 + TypeScript)","├── 📁 web/                      # MiniWeb (PWA + Vite)","├── 📁 functions/                # 後端服務 (Firebase Functions)","├── 📁 對話/                     # 項目文檔和進度","├── 📁 scripts/                  # 統一管理腳本","│   ├── 📄 build.sh             # 統一構建腳本","│   ├── 📄 dev.sh               # 統一開發腳本","│   ├── 📄 stop.sh              # 停止服務腳本","│   ├── 📄 status.sh            # 服務狀態檢查","│   └── 📄 logs.sh              # 日誌查看工具","├── 📄 package.json              # 總管家配置","├── 📄 .env.example              # 統一環境配置","├── 📄 README.md                 # 項目說明","└── 📄 PROJECT_ORGANIZATION.md   # 本文檔","```","","---","","## 🚀 **使用方法**","","### **1. 快速開始**","","```bash","# 進入項目目錄","cd 偉大","","# 安裝所有依賴","npm run install:all","","# 配置環境變數","cp .env.example .env.local","# 編輯 .env.local 文件，填入實際配置值","","# 啟動所有開發服務","npm run dev","```","","### **2. 常用命令**","","```bash","# 開發相關","npm run dev              # 啟動所有開發服務","npm run dev:admin        # 啟動管理後台","npm run dev:web          # 啟動 MiniWeb","npm run dev:functions    # 啟動後端服務","","# 構建相關","npm run build            # 構建所有項目","npm run build:admin      # 構建管理後台","npm run build:web        # 構建 MiniWeb","npm run build:functions  # 構建後端服務","","# 部署相關","npm run deploy           # 部署所有項目","npm run deploy:admin     # 部署管理後台","npm run deploy:web       # 部署 MiniWeb","npm run deploy:functions # 部署後端服務","","# 維護相關","npm run clean            # 清理所有構建文件","npm run lint             # 檢查所有項目代碼","npm run test             # 運行所有測試","npm run install:all      # 安裝所有依賴","","# 服務管理","npm run stop             # 停止所有服務","npm run status           # 查看服務狀態","npm run restart          # 重啟所有服務","npm run logs             # 查看服務日誌","```","","---","","## 🛠️ **腳本工具詳解**","","### **📄 build.sh - 統一構建腳本**","","**功能**: 自動構建所有子項目","**特點**: ","- 自動檢查 Node.js 和 npm 版本","- 清理舊的構建文件","- 安裝缺失的依賴","- 按順序構建各個項目","- 檢查構建結果","","**使用**: `npm run build` 或 `bash scripts/build.sh`","","### **📄 dev.sh - 統一開發腳本**","","**功能**: 同時啟動所有開發服務","**特點**:","- 自動檢查環境和依賴","- 在後台啟動各個服務","- 實時監控服務狀態","- 優雅的停止和清理","","**使用**: `npm run dev` 或 `bash scripts/dev.sh`","","### **📄 stop.sh - 停止服務腳本**","","**功能**: 停止所有開發服務","**特點**:","- 優雅停止各個服務","- 強制停止殘留進程","- 清理進程 ID 文件","- 完整的清理流程","","**使用**: `npm run stop` 或 `bash scripts/stop.sh`","","### **📄 status.sh - 服務狀態檢查**","","**功能**: 檢查所有服務的運行狀態","**特點**:","- 檢查進程狀態","- 檢查端口佔用","- 檢查日誌文件","- 檢查系統資源","- 檢查網絡連接","","**使用**: `npm run status` 或 `bash scripts/status.sh`","","### **📄 logs.sh - 日誌查看工具**","","**功能**: 查看和管理所有服務的日誌","**特點**:","- 查看單個服務日誌","- 查看所有服務日誌","- 實時跟蹤日誌更新","- 清理日誌文件","- 支持多種選項","","**使用**: `npm run logs` 或 `bash scripts/logs.sh [選項] [服務名]`","","---","","## 🔧 **腳本選項詳解**","","### **logs.sh 選項**","","```bash","# 基本用法","npm run logs admin              # 查看管理後台日誌","npm run logs web                # 查看 MiniWeb 日誌","npm run logs functions          # 查看後端服務日誌","","# 高級選項","npm run logs -f admin           # 實時跟蹤管理後台日誌","npm run logs -n 100 admin       # 查看最後100行日誌","npm run logs -a                 # 查看所有服務日誌","npm run logs -c                 # 清理所有日誌文件","npm run logs -h                 # 顯示幫助信息","```","","### **腳本參數說明**","","- `-f, --follow`: 實時跟蹤日誌更新","- `-n, --lines`: 顯示指定行數 (默認: 50)","- `-a, --all`: 顯示所有服務的日誌","- `-c, --clear`: 清理日誌文件","- `-h, --help`: 顯示幫助信息","","---","","## 📱 **服務端口配置**","","| 服務 | 端口 | 說明 |","|------|------|------|","| 管理後台 | 3001 | Next.js 開發服務器 |","| MiniWeb | 3002 | Vite 開發服務器 |","| 後端服務 | 5001 | Firebase Functions 模擬器 |","","---","","## 🔒 **安全注意事項**","","1. **環境配置**: 不要將 `.env.local` 文件提交到版本控制","2. **腳本權限**: 腳本已經設置了適當的執行權限","3. **進程管理**: 腳本會自動管理進程，避免殭屍進程","4. **日誌清理**: 定期清理日誌文件，避免磁盤空間不足","","---","","## 🚀 **性能優化建議**","","1. **依賴管理**: 使用 `npm run install:all` 一次性安裝所有依賴","2. **構建優化**: 使用 `npm run build` 統一構建，避免重複操作","3. **日誌管理**: 使用 `npm run logs -c` 定期清理日誌文件","4. **服務監控**: 使用 `npm run status` 定期檢查服務狀態","","---","","## 🐛 **故障排除**","","### **常見問題**","","1. **端口被佔用**","   ```bash","   # 檢查端口佔用","   lsof -i :3001","   lsof -i :3002","   lsof -i :5001","   ","   # 停止佔用端口的進程","   kill -9 <PID>","   ```","","2. **依賴安裝失敗**","   ```bash","   # 清理並重新安裝","   npm run clean","   npm run install:all","   ```","","3. **服務無法啟動**","   ```bash","   # 檢查服務狀態","   npm run status","   ","   # 查看日誌","   npm run logs admin","   npm run logs web","   npm run logs functions","   ```","","4. **腳本權限問題**","   ```bash","   # 重新設置執行權限","   chmod +x scripts/*.sh","   ```","","### **調試技巧**","","1. **實時日誌**: 使用 `npm run logs -f <服務名>` 實時跟蹤日誌","2. **狀態檢查**: 使用 `npm run status` 檢查所有服務狀態","3. **進程管理**: 使用 `ps aux | grep node` 查看 Node.js 進程","4. **端口檢查**: 使用 `netstat -tlnp` 檢查端口佔用","","---","","## 📚 **進階用法**","","### **自定義腳本**","","可以根據需要創建自定義腳本：","","```bash","# 創建自定義腳本","touch scripts/custom.sh","chmod +x scripts/custom.sh","","# 在 package.json 中添加命令","{","  \"scripts\": {","    \"custom\": \"bash scripts/custom.sh\"","  }","}","```","","### **腳本組合**","","可以組合多個腳本：","","```bash","# 重啟所有服務","npm run stop && npm run dev","","# 清理並重新構建","npm run clean && npm run build","","# 檢查狀態並查看日誌","npm run status && npm run logs -a","```","","---","","## 🎯 **最佳實踐**","","1. **開發流程**","   - 使用 `npm run dev` 啟動開發環境","   - 使用 `npm run status` 檢查服務狀態","   - 使用 `npm run logs -f <服務名>` 跟蹤日誌","","2. **構建部署**","   - 使用 `npm run build` 構建所有項目","   - 使用 `npm run deploy` 部署到生產環境","   - 使用 `npm run clean` 清理構建文件","","3. **維護管理**","   - 定期使用 `npm run status` 檢查服務狀態","   - 定期使用 `npm run logs -c` 清理日誌","   - 使用 `npm run restart` 重啟異常服務","","---","","## 🏆 **總結**","","通過本次項目整理，我們實現了：","","✅ **統一管理**: 一個命令管理所有子項目  ","✅ **簡化配置**: 統一的環境配置文件  ","✅ **提升效率**: 自動化的構建和部署腳本  ","✅ **改善體驗**: 清晰的項目結構和文檔  ","✅ **腳本工具**: 完整的服務管理工具集  ","","現在開發者可以：","- 使用 `npm run dev` 一鍵啟動所有服務","- 使用 `npm run build` 一鍵構建所有項目","- 使用 `npm run deploy` 一鍵部署到生產環境","- 使用各種腳本工具管理服務和查看日誌","","**項目整理完成！現在可以享受更簡潔、高效的開發體驗了！** 🎉",""],"tokenizedAddedLines}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}