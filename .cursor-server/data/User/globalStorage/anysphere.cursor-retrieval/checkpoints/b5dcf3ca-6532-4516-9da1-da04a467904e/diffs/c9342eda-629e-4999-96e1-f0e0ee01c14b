{"fsPath":"/home/a0928997578_gmail_com/偉大/admin/src/lib/utils.ts","fileUuid":"c9342eda-629e-4999-96e1-f0e0ee01c14b","fileSizeBytes":5125,"numLines":188,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":189,"addedLines":["import { type ClassValue, clsx } from 'clsx';","import { twMerge } from 'tailwind-merge';","","// 合併 Tailwind CSS 類名","export function cn(...inputs: ClassValue[]) {","  return twMerge(clsx(inputs));","}","","// 格式化貨幣","export function formatCurrency(amount: number, currency: string = 'USD'): string {","  return new Intl.NumberFormat('en-US', {","    style: 'currency',","    currency: currency,","  }).format(amount);","}","","// 格式化日期","export function formatDate(date: Date | string): string {","  const d = typeof date === 'string' ? new Date(date) : date;","  return new Intl.DateTimeFormat('en-US', {","    year: 'numeric',","    month: 'short',","    day: 'numeric',","    hour: '2-digit',","    minute: '2-digit',","  }).format(d);","}","","// 格式化相對時間","export function formatRelativeTime(date: Date | string): string {","  const d = typeof date === 'string' ? new Date(date) : date;","  const now = new Date();","  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);","","  if (diffInSeconds < 60) return '剛剛';","  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} 分鐘前`;","  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} 小時前`;","  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} 天前`;","  if (diffInSeconds < 31536000) return `${Math.floor(diffInSeconds / 2592000)} 個月前`;","  return `${Math.floor(diffInSeconds / 31536000)} 年前`;","}","","// 生成隨機 ID","export function generateId(): string {","  return Math.random().toString(36).substr(2, 9);","}","","// 截斷文本","export function truncateText(text: string, maxLength: number): string {","  if (text.length <= maxLength) return text;","  return text.slice(0, maxLength) + '...';","}","","// 計算百分比","export function calculatePercentage(value: number, total: number): number {","  if (total === 0) return 0;","  return Math.round((value / total) * 100);","}","","// 驗證電子郵件","export function isValidEmail(email: string): boolean {","  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;","  return emailRegex.test(email);","}","","// 驗證手機號碼","export function isValidPhone(phone: string): boolean {","  const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]+$/;","  return phoneRegex.test(phone);","}","","// 深拷貝對象","export function deepClone<T>(obj: T): T {","  if (obj === null || typeof obj !== 'object') return obj;","  if (obj instanceof Date) return new Date(obj.getTime()) as T;","  if (obj instanceof Array) return obj.map(item => deepClone(item)) as T;","  if (typeof obj === 'object') {","    const clonedObj = {} as T;","    for (const key in obj) {","      if (obj.hasOwnProperty(key)) {","        clonedObj[key] = deepClone(obj[key]);","      }","    }","    return clonedObj;","  }","  return obj;","}","","// 防抖函數","export function debounce<T extends (...args: any[]) => any>(","  func: T,","  wait: number","): (...args: Parameters<T>) => void {","  let timeout: NodeJS.Timeout;","  return (...args: Parameters<T>) => {","    clearTimeout(timeout);","    timeout = setTimeout(() => func(...args), wait);","  };","}","","// 節流函數","export function throttle<T extends (...args: any[]) => any>(","  func: T,","  limit: number","): (...args: Parameters<T>) => void {","  let inThrottle: boolean;","  return (...args: Parameters<T>) => {","    if (!inThrottle) {","      func(...args);","      inThrottle = true;","      setTimeout(() => (inThrottle = false), limit);","    }","  };","}","","// 獲取文件擴展名","export function getFileExtension(filename: string): string {","  return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 2);","}","","// 格式化文件大小","export function formatFileSize(bytes: number): string {","  if (bytes === 0) return '0 Bytes';","  const k = 1024;","  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];","  const i = Math.floor(Math.log(bytes) / Math.log(k));","  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];","}","","// 生成顏色","export function generateColor(index: number): string {","  const colors = [","    '#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6',","    '#EC4899', '#06B6D4', '#84CC16', '#F97316', '#6366F1'","  ];","  return colors[index % colors.length];","}","","// 檢查是否為移動設備","export function isMobileDevice(): boolean {","  if (typeof window === 'undefined') return false;","  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(","    navigator.userAgent","  );","}","","// 檢查是否為桌面設備","export function isDesktopDevice(): boolean {","  return !isMobileDevice();","}","","// 獲取屏幕尺寸","export function getScreenSize(): { width: number; height: number } {","  if (typeof window === 'undefined') return { width: 0, height: 0 };","  return {","    width: window.innerWidth,","    height: window.innerHeight","  };","}","","// 滾動到頂部","export function scrollToTop(): void {","  if (typeof window === 'undefined') return;","  window.scrollTo({ top: 0, behavior: 'smooth' });","}","","// 複製到剪貼板","export async function copyToClipboard(text: string): Promise<boolean> {","  try {","    if (navigator.clipboard) {","      await navigator.clipboard.writeText(text);","      return true;","    } else {","      // 降級方案","      const textArea = document.createElement('textarea');","      textArea.value = text;","      document.body.appendChild(textArea);","      textArea.select();","      document.execCommand('copy');","      document.body.removeChild(textArea);","      return true;","    }","  } catch (error) {","    console.error('複製失敗:', error);","    return false;","  }","}",""],"tokenizedAddedLines}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}