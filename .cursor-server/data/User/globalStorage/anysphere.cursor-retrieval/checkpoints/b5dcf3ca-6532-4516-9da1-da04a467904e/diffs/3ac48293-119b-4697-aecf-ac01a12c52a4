{"fsPath":"/home/a0928997578_gmail_com/偉大/admin/src/hooks/useAuth.ts","fileUuid":"3ac48293-119b-4697-aecf-ac01a12c52a4","fileSizeBytes":1998,"numLines":80,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":81,"addedLines":["import { useState, useEffect, createContext, useContext } from 'react';","import { User as FirebaseUser, onAuthStateChanged } from 'firebase/auth';","import { auth } from '@/lib/firebase';","import { User } from '@/types';","","interface AuthContextType {","  user: User | null;","  firebaseUser: FirebaseUser | null;","  loading: boolean;","  signIn: (telegramId: number) => Promise<void>;","  signOut: () => Promise<void>;","}","","const AuthContext = createContext<AuthContextType | undefined>(undefined);","","export function useAuth() {","  const context = useContext(AuthContext);","  if (context === undefined) {","    throw new Error('useAuth must be used within an AuthProvider');","  }","  return context;","}","","export function useAuthState() {","  const [user, setUser] = useState<User | null>(null);","  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);","  const [loading, setLoading] = useState(true);","","  useEffect(() => {","    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {","      setFirebaseUser(firebaseUser);","      ","      if (firebaseUser) {","        // 這裡應該根據 Firebase 用戶獲取我們的用戶數據","        // 暫時使用模擬數據","        const mockUser: User = {","          id: firebaseUser.uid,","          telegramId: 123456789,","          firstName: 'Admin',","          lastName: 'User',","          role: 'admin',","          status: 'active',","          permissions: ['all'],","          lastLogin: new Date(),","          createdAt: new Date(),","          updatedAt: new Date(),","        };","        setUser(mockUser);","      } else {","        setUser(null);","      }","      ","      setLoading(false);","    });","","    return unsubscribe;","  }, []);","","  const signIn = async (telegramId: number) => {","    // 這裡應該實現 Telegram 認證邏輯","    console.log('Signing in with Telegram ID:', telegramId);","  };","","  const signOut = async () => {","    try {","      await auth.signOut();","    } catch (error) {","      console.error('Sign out error:', error);","    }","  };","","  return {","    user,","    firebaseUser,","    loading,","    signIn,","    signOut,","  };","}",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000003,1000004,1000005,1000006,1000007,1000008,1000009,1000010,1000011,1000004,1000012,1000004,1000013,1000014,1000015,1000016,1000017,1000018,1000011,1000004,1000019,1000020,1000021,1000022,1000004,1000023,1000024,1000025,1000026,1000027,1000028,1000029,1000030,1000031,1000032,1000033,1000034,1000035,1000036,1000037,1000038,1000039,1000040,1000041,1000042,1000043,1000044,1000045,1000026,1000046,1000047,1000004,1000048,1000049,1000004,1000050,1000051,1000052,1000053,1000004,1000054,1000055,1000056,1000057,1000058,1000059,1000053,1000004,1000060,1000061,1000062,1000063,1000064,1000065,1000053,1000011,1000004]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}