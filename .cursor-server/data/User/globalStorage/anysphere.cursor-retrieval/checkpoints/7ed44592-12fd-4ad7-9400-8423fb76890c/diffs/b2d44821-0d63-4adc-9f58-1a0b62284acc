{"fsPath":"/home/a0928997578_gmail_com/ÂÅâÂ§ß/functions/src/telegram-webhook.ts","fileUuid":"b2d44821-0d63-4adc-9f58-1a0b62284acc","fileSizeBytes":6919,"numLines":272,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":273,"addedLines":["import { onRequest } from 'firebase-functions/v2/https';","import { TelegramBotService } from './services/telegram';","import { AuthService } from './services/auth';","import { DatabaseService } from './services/database';","","// Telegram Webhook ËôïÁêÜÂô®","export const telegramWebhook = onRequest({","  cors: true,","  maxInstances: 10","}, async (req, res) => {","  try {","    // Âè™ËôïÁêÜ POST Ë´ãÊ±Ç","    if (req.method !== 'POST') {","      return res.status(405).json({ error: 'Method not allowed' });","    }","","    const update = req.body;","    console.log('Received Telegram update:', JSON.stringify(update, null, 2));","","    // ËôïÁêÜÂõûË™øÊü•Ë©¢","    if (update.callback_query) {","      await TelegramBotService.handleCallbackQuery(update.callback_query);","      return res.json({ success: true });","    }","","    // ËôïÁêÜÊ∂àÊÅØ","    if (update.message) {","      const message = update.message;","      const chatId = message.chat.id;","      const from = message.from;","      const text = message.text;","","      // Ê™¢Êü•ÊòØÂê¶ÁÇ∫ÁßÅËÅä","      if (message.chat.type !== 'private') {","        return res.json({ success: true });","      }","","      // ËôïÁêÜÂëΩ‰ª§","      if (text && text.startsWith('/')) {","        await handleCommand(chatId, from, text);","      } else if (text) {","        // ËôïÁêÜÊôÆÈÄöÊñáÊú¨Ê∂àÊÅØ","        await handleTextMessage(chatId, from, text);","      }","","      return res.json({ success: true });","    }","","    res.json({ success: true });","  } catch (error) {","    console.error('Error processing Telegram webhook:', error);","    res.status(500).json({ error: 'Internal server error' });","  }","});","","// ËôïÁêÜÂëΩ‰ª§","async function handleCommand(chatId: number, from: any, command: string) {","  try {","    switch (command) {","      case '/start':","        await handleStartCommand(chatId, from);","        break;","        ","      case '/help':","        await TelegramBotService.sendHelpKeyboard(chatId);","        break;","        ","      case '/menu':","        await handleStartCommand(chatId, from);","        break;","        ","      case '/products':","        const categories = await DatabaseService.getCategories();","        await TelegramBotService.sendCategoryKeyboard(chatId, categories);","        break;","        ","      case '/cart':","        await TelegramBotService.sendCartKeyboard(chatId, []);","        break;","        ","      case '/orders':","        await TelegramBotService.sendMessage(chatId, 'üìã Ê≠£Âú®Êü•Ë©¢ÊÇ®ÁöÑË®ÇÂñÆ...');","        break;","        ","      case '/agent':","        await TelegramBotService.sendAgentSystemKeyboard(chatId);","        break;","        ","      case '/language':","        await TelegramBotService.sendLanguageKeyboard(chatId);","        break;","        ","      default:","        await TelegramBotService.sendMessage(chatId, ","          `‚ùì Êú™Áü•ÂëΩ‰ª§Ôºö${command}\\n\\nüí° ‰ΩøÁî® /help Êü•ÁúãÂèØÁî®ÂëΩ‰ª§„ÄÇ`","        );","        break;","    }","  } catch (error) {","    console.error('Error handling command:', error);","    await TelegramBotService.sendMessage(chatId, '‚ùå ËôïÁêÜÂëΩ‰ª§ÊôÇÁôºÁîüÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ');","  }","}","","// ËôïÁêÜÈñãÂßãÂëΩ‰ª§","async function handleStartCommand(chatId: number, from: any) {","  try {","    // ÂâµÂª∫ÊàñÁç≤ÂèñÁî®Êà∂","    const user = await AuthService.createOrGetUser({","      telegramId: from.id,","      username: from.username,","      firstName: from.first_name,","      lastName: from.last_name,","      languageCode: from.language_code","    });","","    // ÁôºÈÄÅÊ≠°ËøéÊ∂àÊÅØ","    await TelegramBotService.sendWelcomeMessage(chatId, user);","    ","    // ÁôºÈÄÅ‰ΩøÁî®ÊèêÁ§∫","    setTimeout(async () => {","      await TelegramBotService.sendMessage(chatId, ","        `üí° <b>‰ΩøÁî®ÊèêÁ§∫</b>\\n\\n` +","        `‚Ä¢ ÈªûÊìäÊåâÈàïÈÄ≤Ë°åÊìç‰Ωú\\n` +","        `‚Ä¢ ‰ΩøÁî® /menu ËøîÂõû‰∏ªÈÅ∏ÂñÆ\\n` +","        `‚Ä¢ ‰ΩøÁî® /help Áç≤ÂèñÂπ´Âä©\\n` +","        `‚Ä¢ 24/7 ÂÆ¢ÊúçÈö®ÊôÇÁÇ∫ÊÇ®ÊúçÂãô`","      );","    }, 2000);","","  } catch (error) {","    console.error('Error handling start command:', error);","    await TelegramBotService.sendMessage(chatId, '‚ùå ÂàùÂßãÂåñÂ§±ÊïóÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ');","  }","}","","// ËôïÁêÜÊñáÊú¨Ê∂àÊÅØ","async function handleTextMessage(chatId: number, from: any, text: string) {","  try {","    // Ê™¢Êü•ÊòØÂê¶ÁÇ∫ÊêúÂ∞ãË´ãÊ±Ç","    if (text.length > 2 && text.length < 50) {","      await handleSearchRequest(chatId, text);","      return;","    }","","    // Ê™¢Êü•ÊòØÂê¶ÁÇ∫ÂÆ¢ÊúçÊ∂àÊÅØ","    if (text.toLowerCase().includes('ÂÆ¢Êúç') || text.toLowerCase().includes('help')) {","      await TelegramBotService.sendMessage(chatId, ","        `üìû <b>ÂÆ¢ÊúçÊîØÊè¥</b>\\n\\n` +","        `‚Ä¢ 24/7 Âú®Á∑öÂÆ¢Êúç\\n` +","        `‚Ä¢ Â∞àÊ•≠ÊäÄË°ìÊîØÊè¥\\n` +","        `‚Ä¢ Âø´ÈÄüÂïèÈ°åËß£Ê±∫\\n\\n` +","        `üí¨ Ë´ãÊèèËø∞ÊÇ®ÁöÑÂïèÈ°åÔºåÂÆ¢ÊúçÊúÉÁõ°Âø´ÂõûË¶ÜÊÇ®„ÄÇ`","      );","      return;","    }","","    // ÈªòË™çÂõûÊáâ","    await TelegramBotService.sendMessage(chatId, ","      `üí¨ Êî∂Âà∞ÊÇ®ÁöÑÊ∂àÊÅØÔºö${text}\\n\\n` +","      `üí° Ë´ã‰ΩøÁî®ÊåâÈàïÊàñÂëΩ‰ª§ÈÄ≤Ë°åÊìç‰Ωú„ÄÇ\\n` +","      `üîô ‰ΩøÁî® /menu ËøîÂõû‰∏ªÈÅ∏ÂñÆ„ÄÇ`","    );","","  } catch (error) {","    console.error('Error handling text message:', error);","    await TelegramBotService.sendMessage(chatId, '‚ùå ËôïÁêÜÊ∂àÊÅØÊôÇÁôºÁîüÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ');","  }","}","","// ËôïÁêÜÊêúÂ∞ãË´ãÊ±Ç","async function handleSearchRequest(chatId: number, searchTerm: string) {","  try {","    // ÈÄôË£°ÈúÄË¶ÅÂØ¶ÁèæÂïÜÂìÅÊêúÂ∞ãÈÇèËºØ","    await TelegramBotService.sendMessage(chatId, ","      `üîç Ê≠£Âú®ÊêúÂ∞ã„Äå${searchTerm}„Äç...\\n\\n` +","      `üí° ÊêúÂ∞ãÂäüËÉΩÈñãÁôº‰∏≠ÔºåË´ãÁ®çÂæå‰ΩøÁî®„ÄÇ`","    );","  } catch (error) {","    console.error('Error handling search request:', error);","    await TelegramBotService.sendMessage(chatId, '‚ùå ÊêúÂ∞ãÂ§±ÊïóÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ');","  }","}","","// Ë®≠ÁΩÆ Webhook ÁöÑËºîÂä©ÂáΩÊï∏","export const setWebhook = onRequest(async (req, res) => {","  try {","    const webhookUrl = process.env.TELEGRAM_WEBHOOK_URL;","    const botToken = process.env.TELEGRAM_BOT_TOKEN;","    ","    if (!webhookUrl || !botToken) {","      return res.status(500).json({ ","        error: 'Missing webhook URL or bot token' ","      });","    }","","    const response = await fetch(","      `https://api.telegram.org/bot${botToken}/setWebhook`,","      {","        method: 'POST',","        headers: {","          'Content-Type': 'application/json',","        },","        body: JSON.stringify({","          url: webhookUrl,","          allowed_updates: ['message', 'callback_query']","        })","      }","    );","","    const result = await response.json();","    ","    if (result.ok) {","      res.json({ ","        success: true, ","        message: 'Webhook set successfully',","        result ","      });","    } else {","      res.status(400).json({ ","        success: false, ","        error: 'Failed to set webhook',","        result ","      });","    }","  } catch (error) {","    console.error('Error setting webhook:', error);","    res.status(500).json({ ","      success: false, ","      error: 'Internal server error' ","    });","  }","});","","// Áç≤Âèñ Bot ‰ø°ÊÅØÁöÑËºîÂä©ÂáΩÊï∏","export const getBotInfo = onRequest(async (req, res) => {","  try {","    const botToken = process.env.TELEGRAM_BOT_TOKEN;","    ","    if (!botToken) {","      return res.status(500).json({ ","        error: 'Missing bot token' ","      });","    }","","    const response = await fetch(","      `https://api.telegram.org/bot${botToken}/getMe`","    );","","    const result = await response.json();","    ","    if (result.ok) {","      res.json({ ","        success: true, ","        botInfo: result.result ","      });","    } else {","      res.status(400).json({ ","        success: false, ","        error: 'Failed to get bot info',","        result ","      });","    }","  } catch (error) {","    console.error('Error getting bot info:', error);","    res.status(500).json({ ","      success: false, ","      error: 'Internal server error' ","    });","  }","});",""],"tokenizedAddedLines}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}